pipeline {
    agent any

    environment {
        GIT_REPO_URL = 'https://github.com/Bhargavreddysudha/simple-maven.git'
        GIT_BRANCH = 'main'
        SONARQUBE_SERVER = 'http://34.203.226.159:9000/'
        NEXUS_URL = 'http://18.234.185.108:8081/'
        NEXUS_CREDENTIALS_ID = 'nexus-jenkins'
        NEXUS_REPOSITORY = 'JMR-PROJECT' 
    }

    stages {
        stage('Checkout') {
            steps {
                checkout([$class: 'GitSCM', 
                          branches: [[name: "*/${GIT_BRANCH}"]], 
                          userRemoteConfigs: [[url: "${GIT_REPO_URL}"]]])
            }
        }

        stage('SonarQube Analysis') {
            steps {
                script {
                    def mvn = tool 'Maven'

                    withCredentials([string(credentialsId: 'sonar-jenkins', variable: 'SONARQUBE_TOKEN')]) {
                        withSonarQubeEnv(credentialsId: 'sonar-jenkins', installationName: 'SonarQube') {
                            sh "${mvn}/bin/mvn clean verify sonar:sonar -Dsonar.projectKey=my-app"
                        }
                    }
                }
            }
        }

        stage('Quality Gate') {
            steps {
                timeout(time: 1, unit: 'HOURS') {
                    waitForQualityGate abortPipeline: true
                }
            }
        }

        stage('Java Package') {
            steps {
                script {
                    def mvn = tool 'Maven'
                    def artifactName = "my-app-1.0-SNAPSHOT-${env.BUILD_NUMBER}.jar"
                    sh """
                        ${mvn}/bin/mvn clean package -DskipTests -Dmaven.buildNumber.doCheck=false -Dmaven.buildNumber.doUpdate=false -Dbuild.number=${env.BUILD_NUMBER}
                        mv target/my-app-1.0-SNAPSHOT.jar target/${artifactName}
                    """
                }
            }
        }

        stage('Upload to Nexus') {
            steps {
                script {
                    def artifactPath = "target/my-app-1.0-SNAPSHOT-${env.BUILD_NUMBER}.jar"
                    
                    nexusArtifactUploader(
                        nexusVersion: 'nexus3',
                        protocol: 'http',
                        nexusUrl: "${NEXUS_URL}", 
                        groupId: 'com.example', 
                        version: '1.0', 
                        repository: "${NEXUS_REPOSITORY}",
                        credentialsId: "${NEXUS_CREDENTIALS_ID}",
                        artifacts: [[artifactId: 'my-app', file: artifactPath]]
                    )
                }
            }
        }
    }

    post {
        failure {
            emailext (
                to: 'sudhabhargavreddy@gmail.com, bhargavreddysudha@gmail.com',
                subject: "Pipeline failed: ${currentBuild.fullDisplayName}",
                body: "The pipeline ${currentBuild.fullDisplayName} failed. Please check Jenkins for details.",
                attachLog: true
            )
        }
    }
}
